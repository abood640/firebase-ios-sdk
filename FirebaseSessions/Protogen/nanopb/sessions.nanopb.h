/*
 * Copyright 2019 Google
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.8 */

#ifndef PB_FIREBASE_APPQUALITY_SESSIONS_NANOPB_H_INCLUDED
#define PB_FIREBASE_APPQUALITY_SESSIONS_NANOPB_H_INCLUDED
#include <nanopb/pb.h>

#include "clientanalytics.nanopb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif


/* Enum definitions */
typedef enum _firebase_appquality_EventType {
    firebase_appquality_EventType_EVENT_UNKNOWN = 0,
    firebase_appquality_EventType_EVENT_SESSION_START = 1
} firebase_appquality_EventType;
#define _firebase_appquality_EventType_MIN firebase_appquality_EventType_EVENT_UNKNOWN
#define _firebase_appquality_EventType_MAX firebase_appquality_EventType_EVENT_SESSION_START
#define _firebase_appquality_EventType_ARRAYSIZE ((firebase_appquality_EventType)(firebase_appquality_EventType_EVENT_SESSION_START+1))

typedef enum _firebase_appquality_DataCollectionState {
    firebase_appquality_DataCollectionState_COLLECTION_UNKNOWN = 0,
    firebase_appquality_DataCollectionState_COLLECTION_SDK_NOT_INSTALLED = 1,
    firebase_appquality_DataCollectionState_COLLECTION_ENABLED = 2,
    firebase_appquality_DataCollectionState_COLLECTION_DISABLED = 3,
    firebase_appquality_DataCollectionState_COLLECTION_DISABLED_VIA_SETTINGS = 4,
    firebase_appquality_DataCollectionState_COLLECTION_SAMPLED = 5
} firebase_appquality_DataCollectionState;
#define _firebase_appquality_DataCollectionState_MIN firebase_appquality_DataCollectionState_COLLECTION_UNKNOWN
#define _firebase_appquality_DataCollectionState_MAX firebase_appquality_DataCollectionState_COLLECTION_SAMPLED
#define _firebase_appquality_DataCollectionState_ARRAYSIZE ((firebase_appquality_DataCollectionState)(firebase_appquality_DataCollectionState_COLLECTION_SAMPLED+1))

typedef enum _firebase_appquality_OsName {
    firebase_appquality_OsName_OS_NAME_UNKNOWN = 0,
    firebase_appquality_OsName_OS_NAME_IOS = 1,
    firebase_appquality_OsName_OS_NAME_IPAD_OS = 2,
    firebase_appquality_OsName_OS_NAME_MAC_OS = 3,
    firebase_appquality_OsName_OS_NAME_TV_OS = 4,
    firebase_appquality_OsName_OS_NAME_WATCH_OS = 5
} firebase_appquality_OsName;
#define _firebase_appquality_OsName_MIN firebase_appquality_OsName_OS_NAME_UNKNOWN
#define _firebase_appquality_OsName_MAX firebase_appquality_OsName_OS_NAME_WATCH_OS
#define _firebase_appquality_OsName_ARRAYSIZE ((firebase_appquality_OsName)(firebase_appquality_OsName_OS_NAME_WATCH_OS+1))

/* Struct definitions */
typedef struct _firebase_appquality_AndroidApplicationInfo {
    pb_callback_t package_name;
    pb_callback_t sdk_version;
    pb_callback_t version_name;
/* @@protoc_insertion_point(struct:firebase_appquality_AndroidApplicationInfo) */
} firebase_appquality_AndroidApplicationInfo;

typedef struct _firebase_appquality_AppleApplicationInfo {
    pb_callback_t bundle_short_version;
    pb_callback_t sdk_version;
    NetworkConnectionInfo network_connection_info;
    firebase_appquality_OsName os_name;
/* @@protoc_insertion_point(struct:firebase_appquality_AppleApplicationInfo) */
} firebase_appquality_AppleApplicationInfo;

typedef struct _firebase_appquality_DataCollectionStatus {
    firebase_appquality_DataCollectionState performance;
    firebase_appquality_DataCollectionState crashlytics;
/* @@protoc_insertion_point(struct:firebase_appquality_DataCollectionStatus) */
} firebase_appquality_DataCollectionStatus;

typedef struct _firebase_appquality_ApplicationInfo {
    pb_callback_t app_id;
    pb_callback_t device_model;
    pb_callback_t development_platform_name;
    pb_callback_t development_platform_version;
    pb_size_t which_platform_info;
    union {
        firebase_appquality_AndroidApplicationInfo android_app_info;
        firebase_appquality_AppleApplicationInfo apple_app_info;
    };
/* @@protoc_insertion_point(struct:firebase_appquality_ApplicationInfo) */
} firebase_appquality_ApplicationInfo;

typedef struct _firebase_appquality_SessionEvent {
    firebase_appquality_EventType event_type;
    pb_bytes_array_t *session_id;
    pb_bytes_array_t *previous_session_id;
    pb_bytes_array_t *firebase_installation_id;
    int64_t event_timestamp_us;
    float sampling_rate;
    firebase_appquality_ApplicationInfo application_info;
    firebase_appquality_DataCollectionStatus data_collection_status;
/* @@protoc_insertion_point(struct:firebase_appquality_SessionEvent) */
} firebase_appquality_SessionEvent;

/* Default values for struct fields */

/* Initializer values for message structs */
#define firebase_appquality_SessionEvent_init_default {_firebase_appquality_EventType_MIN, NULL, NULL, NULL, 0, 0, firebase_appquality_ApplicationInfo_init_default, firebase_appquality_DataCollectionStatus_init_default}
#define firebase_appquality_DataCollectionStatus_init_default {_firebase_appquality_DataCollectionState_MIN, _firebase_appquality_DataCollectionState_MIN}
#define firebase_appquality_ApplicationInfo_init_default {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, 0, {firebase_appquality_AndroidApplicationInfo_init_default}}
#define firebase_appquality_AndroidApplicationInfo_init_default {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define firebase_appquality_AppleApplicationInfo_init_default {{{NULL}, NULL}, {{NULL}, NULL}, NetworkConnectionInfo_init_default, _firebase_appquality_OsName_MIN}
#define firebase_appquality_SessionEvent_init_zero {_firebase_appquality_EventType_MIN, NULL, NULL, NULL, 0, 0, firebase_appquality_ApplicationInfo_init_zero, firebase_appquality_DataCollectionStatus_init_zero}
#define firebase_appquality_DataCollectionStatus_init_zero {_firebase_appquality_DataCollectionState_MIN, _firebase_appquality_DataCollectionState_MIN}
#define firebase_appquality_ApplicationInfo_init_zero {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, 0, {firebase_appquality_AndroidApplicationInfo_init_zero}}
#define firebase_appquality_AndroidApplicationInfo_init_zero {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define firebase_appquality_AppleApplicationInfo_init_zero {{{NULL}, NULL}, {{NULL}, NULL}, NetworkConnectionInfo_init_zero, _firebase_appquality_OsName_MIN}

/* Field tags (for use in manual encoding/decoding) */
#define firebase_appquality_AndroidApplicationInfo_package_name_tag 1
#define firebase_appquality_AndroidApplicationInfo_sdk_version_tag 2
#define firebase_appquality_AndroidApplicationInfo_version_name_tag 3
#define firebase_appquality_AppleApplicationInfo_bundle_short_version_tag 1
#define firebase_appquality_AppleApplicationInfo_sdk_version_tag 2
#define firebase_appquality_AppleApplicationInfo_network_connection_info_tag 3
#define firebase_appquality_AppleApplicationInfo_os_name_tag 4
#define firebase_appquality_DataCollectionStatus_performance_tag 1
#define firebase_appquality_DataCollectionStatus_crashlytics_tag 2
#define firebase_appquality_ApplicationInfo_android_app_info_tag 5
#define firebase_appquality_ApplicationInfo_apple_app_info_tag 6
#define firebase_appquality_ApplicationInfo_app_id_tag 1
#define firebase_appquality_ApplicationInfo_device_model_tag 2
#define firebase_appquality_ApplicationInfo_development_platform_name_tag 3
#define firebase_appquality_ApplicationInfo_development_platform_version_tag 4
#define firebase_appquality_SessionEvent_event_type_tag 1
#define firebase_appquality_SessionEvent_session_id_tag 2
#define firebase_appquality_SessionEvent_previous_session_id_tag 3
#define firebase_appquality_SessionEvent_firebase_installation_id_tag 4
#define firebase_appquality_SessionEvent_event_timestamp_us_tag 5
#define firebase_appquality_SessionEvent_sampling_rate_tag 6
#define firebase_appquality_SessionEvent_application_info_tag 7
#define firebase_appquality_SessionEvent_data_collection_status_tag 8

/* Struct field encoding specification for nanopb */
extern const pb_field_t firebase_appquality_SessionEvent_fields[9];
extern const pb_field_t firebase_appquality_DataCollectionStatus_fields[3];
extern const pb_field_t firebase_appquality_ApplicationInfo_fields[7];
extern const pb_field_t firebase_appquality_AndroidApplicationInfo_fields[4];
extern const pb_field_t firebase_appquality_AppleApplicationInfo_fields[5];

/* Maximum encoded size of messages (where known) */
/* firebase_appquality_SessionEvent_size depends on runtime parameters */
#define firebase_appquality_DataCollectionStatus_size 4
/* firebase_appquality_ApplicationInfo_size depends on runtime parameters */
/* firebase_appquality_AndroidApplicationInfo_size depends on runtime parameters */
/* firebase_appquality_AppleApplicationInfo_size depends on runtime parameters */

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define SESSIONS_MESSAGES \


#endif

/* @@protoc_insertion_point(eof) */

#endif
